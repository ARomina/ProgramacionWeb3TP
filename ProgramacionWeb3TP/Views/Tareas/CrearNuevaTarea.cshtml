@model ProgramacionWeb3TP.Models.Tarea

@{
    ViewBag.Title = "Crear Nueva Tarea";
}

<div class="container">
    <div class="row">
        <div class="col-md-12 col-sm-12">
            <h1 class="paddingLeftTitles">Nueva Tarea</h1>
            <hr />
        </div>
    </div>
    <div class="row">
        <div class="col-md-12 col-sm-12">
            @if (TempData["Error"] != null) {//si existe un error
                <div class="col-md-6 col-md-offset-3">
                    <div class="alert alert-danger text-center">
                        <h5>@TempData["Error"]</h5>
                    </div>
                </div>
            }

            @using (Html.BeginForm("CreacionNuevaTarea", "Tareas")) {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group">
                        @Html.LabelFor(model => model.IdCarpeta, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <select id="carpetaId" name="carpetaId" runat="server">
                                <option value="0">Seleccione una opción...</option>
                                @foreach (var c in ViewBag.listaCarpetas) {
                            <option value="@c.IdCarpeta">@c.Nombre</option>
}
                            </select>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.EstimadoHoras, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.EstimadoHoras, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.EstimadoHoras, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FechaFin, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.FechaFin, new { id = "fechaFin" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Prioridad, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("Prioridad", new List<SelectListItem>{
                                                new SelectListItem{ Text="Seleccionar prioridad...", Value = "0" },
                                                new SelectListItem{ Text="Urgente", Value = "1" },
                                                new SelectListItem{ Text="Alta", Value = "2" },
                                                new SelectListItem{ Text="Media", Value = "3" },
                                                new SelectListItem{ Text="Baja", Value = "4" }
                                             })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Completada, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("Completada", new List<SelectListItem>{
                                                new SelectListItem{ Text="Completada", Value = "1" },
                                                new SelectListItem{ Text="No completada", Value = "0" }
                                             })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            }

            <div>
                @Html.ActionLink("Back to List", "Index")
            </div>
        </div>
    </div>
</div>
